

#include <stdio.h>
#include <winsock2.h>
#include <stdlib.h>

#pragma comment(lib, "ws2_32.lib")

#define SERVER_IP "127.0.0.1"  
#define PORT 8080
#include <windows.h>
#include "resource.h"
#include <conio.h>
#include <time.h>
void gotoxy(int x, int y) {
    COORD coord;
    coord.X = x;
    coord.Y = y;
    SetConsoleCursorPosition(GetStdHandle(STD_OUTPUT_HANDLE), coord);
}
  char *ascii_art[] = {
        "               ,---.                    ,-,--.    _,.---._                   ,---.        ,-,--.  ,--.-,,-,--,       ",
        "    _..---.  .--.'  \\      _,..---._  ,-.'-  _\\ ,-.' - ,  `.   .--.-. .-.-..--.'  \\     ,-.'-  _\\/==/  /|=|  |       ",
        "  .' .'.-. \\ \\==\\-/\\ \\   /==/,   -  \\/==/_ ,_.'/==/ ,    -  \\ /==/ -|/=/  |\\==\\-/\\ \\   /==/_ ,_.'|==|_ ||=|, |       ",
        " /==/- '=' / /==/-|_\\ |  |==|   _   _\\==\\  \\  |==| - .=.  ,  ||==| ,||=| -|/==/-|_\\ |  \\==\\  \\   |==| ,|/=| _|       ",
        " |==|-,   '  \\==\\,   - \\ |==|  .=.   |\\==\\ -\\ |==|  : ;=:  - ||==|- | =/  |\\==\\,   - \\  \\==\\ -\\  |==|- `-' _ |       ",
        " |==|  .=. \\ /==/ -   ,| |==|,|   | -|_\\==\\ ,\\|==|,  '='  ,  ||==|,  \\/ - |/==/ -   ,|  _\\==\\ ,\\ |==|  _     |       ",
        " /==/- '=' ,/==/-  /\\ - \\|==|  '='   /==/\\/ _ |\\==\\ _   -    ;|==|-   ,   /==/-  /\\ - \\/==/\\/ _ ||==|   .-. ,\\       ",
        "|==|   -   /\\==\\ _.\\=\\.-'|==|-,   _`/\\==\\ - , / '.='.  ,  ; -\\/==/ , _  .\\==\\ _.\\=\\.-'\\==\\ - , //==/, //=/  |       ",
        "`-._`.___,'  `--`        `-.`.____.'  `--`---'    `--`--'' `--`--`..---'   `--`         `--`---' `--`-' `-`--`    "
    };
  
int main() {
	
    WSADATA wsaData;
    SOCKET clientSocket;//istemciyi oluşturur
    struct sockaddr_in serverAddr;//sunucunun bilgilerini tutar yani port numarası 
    //char buffer[1024];
    int bytesSent, bytesReceived;//gönderilen ve alınan bilgiler
 
    int bytesRead;
    // Winsock başlatılıyor
    if (WSAStartup(MAKEWORD(2, 2), &wsaData) != 0) {
        printf("WINSOCK HATASI\n");
        return 1;
    }//winsocku başlatır sürümü 2.2 dir

    
    clientSocket = socket(AF_INET, SOCK_STREAM, 0);
    if (clientSocket == INVALID_SOCKET) {
        printf("SOCKET HATASI\n");
        WSACleanup();
        return 1;
    }  // Soket oluşturuluyor

    // Sunucu adresi ayarlanıyor
    serverAddr.sin_family = AF_INET;
    serverAddr.sin_port = htons(PORT);
    serverAddr.sin_addr.s_addr = inet_addr(SERVER_IP);

 
    if (connect(clientSocket, (struct sockaddr*)&serverAddr, sizeof(serverAddr)) == SOCKET_ERROR) {
        printf("BAGLANTI HATASI\n");
        closesocket(clientSocket);
        WSACleanup();
        return 1;
    }//istemciyi sunucuya bağlar



int i;
int z;
    // For döngüsü ile her satırı ekrana yazdırıyoruz
        for (z = 0; z < 9; z++) {
            gotoxy(2,2+z);
           printf("\033[34m %s\033[0m\n", ascii_art[z]);
        
            usleep(100000);
        }
    
      for(i=1;i<113;i++){
        gotoxy(i,0);
        printf("\033[34m%c\033[0m",205);
        usleep(10000);
        gotoxy(i,17);
               printf("\033[34m%c\033[0m",205);
    }
    for(i=0;i<17;i++)
    {
        gotoxy(0,i);
            printf("\033[34m%c\033[0m",186);
        usleep(10000);
    }


    for(i=1;i<17;i++)
    {
        gotoxy(113,i);
                    printf("\033[34m%c\033[0m",186);
        usleep(10000);
    }
    gotoxy(0,0);
                printf("\033[34m%c\033[0m",201);
    gotoxy(0,17);
            printf("\033[34m%c\033[0m",200);
    gotoxy(113,17);
            printf("\033[34m%c\033[0m",188);
    gotoxy(113,0);
            printf("\033[34m%c\033[0m",187);
      gotoxy(30,11);
 printf("NE BADMINTON NE SQUASH BADSQUASH");
 gotoxy(30,12);
 printf("NEITHER BADMINTON NOR SQUASH JUST BADSQUASH ");
 gotoxy(30,13);
    printf("KONTROL TUSLARIMIZ W/S TUSLARIDIR BASLAMAK ICIN HERHANGI BIR TUSA BASINIZ");
gotoxy(30,14);
printf("OUR CONTROL KEYS ARE W/S KEYS PRESS ANY KEY TO START");



    getch();
   
 //       HRSRC hRsrc = FindResource(NULL, MAKEINTRESOURCE(IDB_WAVEFILE), "WAVE");
 //   HGLOBAL hGlobal = LoadResource(NULL, hRsrc);
 //   void* lpWave = LockResource(hGlobal);//Oyun oynanmaya başlandığı anda müzik çalmaya başlar
    
    
    //	 PlaySound((LPCSTR)lpWave, NULL, SND_MEMORY | SND_ASYNC); 
	system("cls");//ekranı temizler platformun oluşması için
	int eng=2;
	int sayi;
	int hak1=5;
	int hak2=5;
	int hareket_sayisi;
    int OYUNCUX = 78, OYUNCUY = 12; 
    
    srand(time(NULL));
      int OYUNCUX2=2,OYUNCUY2=12;
      char a=189;
int setX=40,setY=10;//oyun başlangıcında setin ilk konumu

    
    int x, y;
    
    for (y = 0; y <= 25; y++) {
        for (x = 0; x <= 80; x++) { 
            if (y == 0 || y == 25 || x == 0 || x == 80)
                {
				printf("%c",219);}
            else
                printf(" ");
                
    
        }//ekran sınırları çizilir
        printf("\n");
    }

    // Zıplayan top için başlangıç pozisyonu
    int topX = 40, topY = 7; // Başlangıç pozisyonu
    int topDirectionY = 1;   // Y ekseninde hareket yönü 
    int topDirectionX = 1;   // X ekseninde hareket yönü 
    int c;



    // Ekran sınırları
    int maxX = 79;
    int maxY = 24;
  

	
	char gelenChar;//sunucudan gelen bilgiyi tutar
   gotoxy(0,26);
             for(i=1;i<=hak1;i++){
            	printf("*");
            	
			}
				gotoxy(76,26);
            for(i=1;i<=hak2;i++){
            	printf("*");
			}//kalan hakları gösterir

    do {


    	
		
    	sayi=rand()%15;
    	bytesSent = send(clientSocket, (char*)&sayi, sizeof(topX), 0);
if(sayi==2)
        {
        	
		gotoxy(setX,setY);
        printf(" ");
        gotoxy(setX,setY+1);
        printf(" ");
		gotoxy(setX,setY+2);
        printf(" ");
        gotoxy(setX,setY+3);
        printf(" ");
	 setX=rand()% 40+20;
        setY=rand()%13+5;
   bytesSent = send(clientSocket, (char*)&setX, sizeof(topX), 0);
        if (bytesSent == SOCKET_ERROR) {
            printf("TOP GONDERILMEDI\n");
            break;
        }

        bytesSent = send(clientSocket, (char*)&setY, sizeof(topY), 0);
        if (bytesSent == SOCKET_ERROR) {
            printf("TOP GONDERILMEDI\n");
            break;
        }
    
		gotoxy(setX,setY);
        printf("\033[31;41m*\033[0m");
        gotoxy(setX,setY+1);
        printf("\033[31;41m*\033[0m");
     gotoxy(setX,setY+2);
        printf("\033[31;41m*\033[0m");
        gotoxy(setX,setY+3);
        printf("\033[31;41m*\033[0m");}
        
		
		

         
        if (_kbhit()) { // Klavye girişi kontrolü
            gotoxy(OYUNCUX, OYUNCUY);
            printf(" "); // Eski karakteri sil
              gotoxy(OYUNCUX, OYUNCUY+1);
            printf(" ");
  gotoxy(OYUNCUX, OYUNCUY+2);
            printf(" ");
              gotoxy(OYUNCUX, OYUNCUY+3);
            printf(" ");
            
          
            c = _getch();
     
                if (c == 'W' || c=='w') {OYUNCUY--;
                      int hareketBilgisi = OYUNCUY; 
char c1='H';//klavyeden girilen tusa göre sunucuya bilgi gönderir

       
	 bytesSent = send(clientSocket, &c1, 1, 0);
				sayi=sayi+2;
				hareket_sayisi=hareket_sayisi+1;
	
				
				} // Yukarı ok tuşu
                else if (c == 'S' || c=='s') {OYUNCUY++;
				hareket_sayisi =hareket_sayisi+1;
				sayi=sayi+2;
				

		int hareketBilgisi = OYUNCUY;  
         char c1='P';
		 bytesSent = send(clientSocket, &c1, 1, 0);
			 // Aşağı ok tuşu
            }
            else{
            	  char c2='q';
            bytesSent=send(clientSocket,&c2,1,0);//herhangi bir tuş girilmez ise karışıklık olmaması için değeri olmayan tuş gönderir
			}
  
            // Ekran sınırlarında hareketi kontrol et
            if (OYUNCUX <1) OYUNCUX = 1; // Gülen yüz sol sınırda
            if (OYUNCUX > 79) OYUNCUX = 79; // Gülen yüz sağ sınırda
            if (OYUNCUY < 1) OYUNCUY = 1; // Gülen yüz üst sınırda
            if (OYUNCUY > 21 )OYUNCUY = 21; // Gülen yüz alt sınırda (maxY = 24, başlık satırından sonra 23)
        
   
            gotoxy(OYUNCUX, OYUNCUY);
            printf("\033[34;44m*\033[0m");
             gotoxy(OYUNCUX, OYUNCUY+1);
            printf("\033[34;44m*\033[0m");
              gotoxy(OYUNCUX, OYUNCUY+2);
            printf("\033[34;44m*\033[0m");
             gotoxy(OYUNCUX, OYUNCUY+3);
            printf("\033[34;44m*\033[0m");


        } 
        else{
        	char c1='q';
        	bytesSent = send(clientSocket, &c1, 1, 0);
		}
              char gelenChar1;
    bytesReceived = recv(clientSocket, &gelenChar1, sizeof(gelenChar), 0);//snucudan diğer oyuncunun bilgisi alır
        // Zıplayan topu hareket ettir
        gotoxy(topX, topY);
        printf(" "); // Eski top pozisyonunu sil

        // Topun hareketini uygula
        topX += topDirectionX;
        topY += topDirectionY;

        // Ekran sınırlarına çarpınca yönü değişir
        if (topX < 1 || topX > maxX) {
            topDirectionX *= -1; // X yönünü değiştir
        }
        if (topY < 2 || topY > maxY-1) {
            topDirectionY *= -1; // Y yönünü değiştir
        }
        if (topX < 1) {
            topX = 1; // Sol sınır
            hak1=hak1-1;//sol sınırı geçince top yeniden başlangıç pozisyonunda başlar
            gotoxy(0,26);
             for(i=1;i<=5;i++){
            	printf(" ");
			}
			gotoxy(0,26);
            for(i=1;i<=hak1;i++){
            	printf("*");
			}
            
            
            topX=40;
            topY=7;
		 }
        if (topX > maxX) {
            topX = maxX; // Sağ sınır
            hak2=hak2-1;
            
            topX=40;
            topY=7;//sağ sınırı geçince top yeniden başlangıç pozisyonunda başlar
             gotoxy(76,26);
             for(i=1;i<=5;i++){
            	printf(" ");
			}
			gotoxy(76,26);
            for(i=1;i<=hak2;i++){
            	printf("*");
			}
        }
    if(topX==OYUNCUX && topY==OYUNCUY )
        {
        	topDirectionX *= -1; // X yönünü değiştir
        	topDirectionY *= -1; // Y yönünü değiştir
		}
		 if(topX==OYUNCUX && topY==OYUNCUY+1)
        {
        	topDirectionX *= -1; // X yönünü değiştir
        	topDirectionY *= -1; // Y yönünü değiştir
		}
		if(topX==OYUNCUX && topY==OYUNCUY+2)
        {
        	topDirectionX *= -1; // X yönünü değiştir
        	topDirectionY *= -1; // Y yönünü değiştir
		}
		 if(topX==OYUNCUX && topY==OYUNCUY+3)
        {
        	topDirectionX *= -1; // X yönünü değiştir
        	topDirectionY *= -1; // Y yönünü değiştir
		}
		 if(topX==OYUNCUX2 && topY==OYUNCUY2 )
        {
        	topDirectionX *= -1; // X yönünü değiştir
        	topDirectionY *= -1; // Y yönünü değiştir
		}
		 if(topX==OYUNCUX2 && topY==OYUNCUY2+1)
        {
        	topDirectionX *= -1; // X yönünü değiştir
        	topDirectionY *= -1; // Y yönünü değiştir
		}
		if(topX==OYUNCUX2 && topY==OYUNCUY2+2)
        {
        	topDirectionX *= -1; // X yönünü değiştir
        	topDirectionY *= -1; // Y yönünü değiştir
		}
		 if(topX==OYUNCUX2 && topY==OYUNCUY2+3)
        {
        	topDirectionX *= -1; // X yönünü değiştir
        	topDirectionY *= -1; // Y yönünü değiştir
		}
		
		if(topX==setX && topY==setY){
				topDirectionX *= -1; // X yönünü değiştir
        	topDirectionY *= -1; // Y yönünü değiştir
		}
			if(topX==setX && topY==setY+1){
				topDirectionX *= -1; // X yönünü değiştir
        	topDirectionY *= -1; // Y yönünü değiştir
		}
		if(topX==setX && topY==setY+2){
				topDirectionX *= -1; // X yönünü değiştir
        	topDirectionY *= -1; // Y yönünü değiştir
		}
		if(topX==setX && topY==setY+3){
				topDirectionX *= -1; // X yönünü değiştir
        	topDirectionY *= -1; // Y yönünü değiştir
		}
        // Yeni pozisyonda topu yazdır
        gotoxy(topX, topY);
        printf("0");
        bytesSent = send(clientSocket, (char*)&topX, sizeof(topX), 0);
        if (bytesSent == SOCKET_ERROR) {
            printf("TOP GONDERILMEDI\n");
            break;
        }

        bytesSent = send(clientSocket, (char*)&topY, sizeof(topY), 0);
        if (bytesSent == SOCKET_ERROR) {
            printf("TOP GONDERILMEDI\n");
            break;
        }//sunucuya topun x ve y kordinatını gönderir

         gotoxy(OYUNCUX2, OYUNCUY2);
            printf(" "); // Eski karakteri sil
              gotoxy(OYUNCUX2, OYUNCUY2+1);
            printf(" ");
            gotoxy(OYUNCUX2, OYUNCUY2+2);
            printf(" ");
              gotoxy(OYUNCUX2, OYUNCUY2+3);
            printf(" ");
        if (gelenChar1 == 'W') {OYUNCUY2--;

		
			
				} // sunucudan gelen bilgiye göre oyuncuyu harket ettirir
                else if (gelenChar1 == 'S') {OYUNCUY2++;
				
				}
				if(gelenChar1=='q');
				    if (OYUNCUY2 < 1) OYUNCUY2 = 1; // Gülen yüz sol sınırda
            if (OYUNCUY2 > 21) OYUNCUY2 = 21;
				
         gotoxy(OYUNCUX2, OYUNCUY2);
            printf("%c",219);
             gotoxy(OYUNCUX2, OYUNCUY2+1);
            printf("%c",219);
              gotoxy(OYUNCUX2, OYUNCUY2+2);
            printf("%c",219);
             gotoxy(OYUNCUX2, OYUNCUY2+3);
            printf("%c",219);
            
        
        // Hareketin daha yumuşak olması için küçük bir gecikme ekleriz
        Sleep(60);

		
       
        sayi=0;
    }while(hak1>0 && hak2>0);
      //FreeResource(hGlobal);
    system("cls");
   gotoxy(40,10);
    printf("OYNUMUZ BITMISTIR ");
    gotoxy(40,11);
    printf("OYUNCU 1 KALAN CAN SAYISI : %d",hak1);
    gotoxy(40,12);
    printf("OYUNCU 2 KALAN CAN SAYISI : %d",hak2);
    gotoxy(40,13);
    if(hak1>hak2)
    printf("OYNUMUZ BITMISTIR  KAZANAN BIRINCI OYUNCU TEBRIKLER ");

else if(hak2>hak1)
        printf("OYNUMUZ BITMISTIR KAZANAN IKINCI OYUNCU TEBRIKLER ");
else
printf("BAGLANTI KOPMASI PROBLEMI OLABILIR");



    closesocket(clientSocket);
    WSACleanup();

    return 0;
}
